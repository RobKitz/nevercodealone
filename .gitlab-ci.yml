
#--------------------------------------------------------------------------------------------------
# STAGES
#--------------------------------------------------------------------------------------------------
# pre_build:    prepare data for docker image
# build:        build docker image
# deploy:       deploy application to environment
# test:         run tests on deployed environment
# final:        remove environment / deploy to production

stages:
  - pre_build
  - build
  - deploy
  - test
  - final

#--------------------------------------------------------------------------------------------------
# TEMPLATES
#--------------------------------------------------------------------------------------------------

.composer_install: &composer_install
  stage: pre_build
  image: composer
  variables:
    APP_ENV: {{dev|prod}}
    COMPOSER_ARGS: {{composer_args}}
  script:
    - composer install $COMPOSER_ARGS
  artifacts:
    paths:
      - public/bundles
      - var
      - vendor
    expire_in: 3 days
    when: on_success
  tags:
    - docker-executor

.build_image: &build_image
  stage: build
  image: docker:stable
  before_script:
    - docker login --username gitlab-ci-token --password $CI_BUILD_TOKEN $CI_REGISTRY 2>/dev/null
  script:
    - docker build -t $CI_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_REF_SLUG --pull .
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_REF_SLUG
  tags:
    - docker-executor

.deploy_environment: &deploy_environment
  stage: deploy
  image: $CI_REGISTRY/$CI_PROJECT_NAMESPACE/docker-rancher-cli
  variables:
    APP_ENV: {{dev|prod}}
    APP_SECRET: {{app_secret}}
    CORS_ALLOW_ORIGIN: {{cors_allow_origin}}
    DB_NAME: {{db_name}}
    DB_PASS: {{db_pass}}
    DB_ROOT_PASS: {{db_root_pass}}
    DB_USER: {{db_user}}
    HTTP_URL: "$CI_COMMIT_REF_SLUG.develop.nevercodealone.de"
    RANCHER_PROJECT_NAME: $CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG
    WEBSERVER_IMAGE: "$CI_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_REF_SLUG"
  script:
    - rancher-compose -p $RANCHER_PROJECT_NAME up -d --pull --upgrade
  tags:
    - docker-executor

#--------------------------------------------------------------------------------------------------
# JOBS
#--------------------------------------------------------------------------------------------------

# Stage: pre_build

composer_install_for_development:
  <<: *composer_install
  variables:
    APP_ENV: dev
    COMPOSER_ARGS: --dev --profile
  except:
    - master
    - stage

composer_install_for_production:
  <<: *composer_install
  variables:
    APP_ENV: prod
    COMPOSER_ARGS: --no-dev --optimize-autoloader
  only:
    - master
    - stage

# Stage: build

build_webserver_image:
  <<: *build_image
  variables:
    COMPONENT: webserver

# Stage: deploy

deploy_to_dev:
  <<: *deploy_environment
  variables:
    APP_ENV: dev
    APP_SECRET: dev-secret
    CORS_ALLOW_ORIGIN: ^https?://localhost:?[0-9]*$
    DB_NAME: devdb
    DB_PASS: devuser
    DB_ROOT_PASS: rootpass
    DB_USER: devpass
    HTTP_URL: "$CI_COMMIT_REF_SLUG.develop.nevercodealone.de"
    RANCHER_PROJECT_NAME: $CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG
    WEBSERVER_IMAGE: "$CI_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_REF_SLUG"
  before_script:
    - rancher rm --type stack --stop $RANCHER_PROJECT_NAME || true
  except:
    - master
    - stage

deploy_to_stage:
  <<: *deploy_environment
  variables:
    APP_ENV: prod
    APP_SECRET: stage-secret
    CORS_ALLOW_ORIGIN: ^https?://localhost:?[0-9]*$
    DB_NAME: stagedb
    DB_PASS: stagepass
    DB_ROOT_PASS: rootpass
    DB_USER: stageuser
    HTTP_URL: "stage.nevercodealone.de"
    RANCHER_PROJECT_NAME: $CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG
    WEBSERVER_IMAGE: "$CI_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_REF_SLUG"
  only:
    - master
    - stage

# Stage: test

run_tests:
  stage: test
  image: registry.nevercodealone.de/nevercodealone/docker-toolbox
  variables:
    GIT_STRATEGY: none
  before_script:
    - export CONTAINERID=$(rancher ps | grep $CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG/toolbox | awk '{ print $1 }')
    - export SSH_PORT_TOOLBOX=$(rancher inspect $CONTAINERID | jq -r .publicEndpoints[0].port)
    - "echo \"TOOLBOX SSH PORT: ${SSH_PORT_TOOLBOX}\""
  script:
    - ssh rancher.nevercodealone.de -p $SSH_PORT_TOOLBOX "cd ~/symfony && (bin/console doctrine:schema:validate || ./bin/console doctrine:schema:create)"
    - ssh rancher.nevercodealone.de -p $SSH_PORT_TOOLBOX "cd ~/symfony && ./vendor/bin/codecept run acceptance --html"
  after_script:
    - ssh rancher.nevercodealone.de -p $SSH_PORT_TOOLBOX "if [ -L ~/symfony/public/report ] ; then unlink ~/symfony/public/report ; fi"
    - ssh rancher.nevercodealone.de -p $SSH_PORT_TOOLBOX "ln -s ~/symfony/tests/_output/ ~/symfony/public/report"
  tags:
    - docker-executor
  except:
    - master
    - stage

# Stage: final

release_image:
  stage: final
  image: docker:stable
  variables:
    GIT_STRATEGY: none
  script:
    - docker pull $CI_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_REF_SLUG
    - docker tag $CI_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_REF_SLUG $CI_REGISTRY/$CI_PROJECT_PATH:stable
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH:stable
  tags:
    - docker-executor
  only:
    - master
  when: manual

teardown_environment:
  stage: final
  image: registry.nevercodealone.de/nevercodealone/docker-toolbox
  variables:
    GIT_STRATEGY: none
  script:
    - rancher rm --type stack --stop $CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG
  tags:
    - docker-executor
  except:
    - master
    - stage
  when: manual

