#--- STAGES ---------------------------------------------------------------------------------------
# pre_build:    prepare data for docker image
# build:        build docker image
# deploy:       deploy application to environment
# test:         run tests on deployed environment
# teardown:     remove environment

stages:
  - pre_build
  - build
  - deploy
  - test
  - teardown

#--- JOBS -----------------------------------------------------------------------------------------

composer:production:
  stage: pre_build
  image: composer
  before_script:
    - composer selfupdate
  script:
    - composer install -d $CI_PROJECT_DIR --optimize-autoloader --no-dev
    - rm -rf .git
    - rm -rf .gitlabenv
  artifacts:
    paths:
      - $CI_PROJECT_DIR
    expire_in: 3 days
    when: on_success
  tags:
    - build
    - docker-executor
  only:
    - master

composer:staging:
  stage: pre_build
  image: composer
  before_script:
    - composer selfupdate
  script:
    - composer install -d $CI_PROJECT_DIR --optimize-autoloader --no-dev
    - rm -rf .git
    - rm -rf .gitlabenv
  artifacts:
    paths:
      - $CI_PROJECT_DIR
    expire_in: 3 days
    when: on_success
  tags:
    - build
    - docker-executor
  only:
    - staging

composer:development:
  stage: pre_build
  image: composer
  before_script:
    - composer selfupdate
  script:
    - composer install -d $CI_PROJECT_DIR
    - rm -rf .git
    - rm -rf .gitlabenv
  artifacts:
    paths:
      - $CI_PROJECT_DIR
    expire_in: 3 days
    when: on_success
  tags:
    - build
    - docker-executor
  except:
    - master
    - staging

build:branch:
  stage: build
  image: docker
  before_script:
    - docker login --username gitlab-ci-token --password $CI_BUILD_TOKEN $CI_REGISTRY 2>/dev/null
    - cat codeception.yml
  script:
    - docker build -t $CI_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_REF_SLUG .
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_REF_SLUG
  tags:
    - docker-executor

cleanup:nonproduction:
  stage: build
  image: identt/rancher-compose
  variables:
    GIT_STRATEGY: none
  script:
    - rancher-compose -p $CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG rm -v -f
  tags:
    - docker-executor
  except:
    - master

deploy:nonproduction:
  stage: deploy
  image: identt/rancher-compose
  variables:
    GIT_STRATEGY: none
  variables:
    DB_HOST: db
    DB_NAME: nca
    DB_PASS: nca
    DB_USER: nca
    DOCKER_IMAGE: $CI_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_REF_SLUG
    TRAEFIK_DOMAIN: "develop.nevercodealone.de"
    TRAEFIK_URL: ${CI_COMMIT_REF_SLUG}.${TRAEFIK_DOMAIN}
    WEBSITE_IP: ${CI_COMMIT_REF_SLUG}.${TRAEFIK_DOMAIN}
    WEBDRIVER_URL: zalenium.zalenium.rancher.internal
  script:
    - rancher-compose -p $CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG up -d
  tags:
    - docker-executor
  except:
    - master
    - staging

test:nonproduction:
  stage: test
  image: registry.nevercodealone.de/nevercodealone/docker-toolbox
  variables:
    GIT_STRATEGY: none
  script:
    - ssh rancher.nevercodealone.de -p $SSH_PORT_DEVELOP "cd /project && ./vendor/bin/codecept run acceptance --html"
  after_script:
    - ssh rancher.nevercodealone.de -p $SSH_PORT_DEVELOP "if [ -L /project/public/report ] ; then unlink /project/public/report ; fi"
    - ssh rancher.nevercodealone.de -p $SSH_PORT_DEVELOP "ln -s /project/tests/_output/ /project/public/report"
  tags:
     - docker-executor
  dependencies: []
  except:
    - master

teardown:branch:
  stage: teardown
  image: identt/rancher-compose
  variables:
    GIT_STRATEGY: none
  script:
    - rancher-compose -p $CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG rm -v -f
  tags:
    - docker-executor
  when: manual

